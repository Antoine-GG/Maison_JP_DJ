
LTexperiment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000186  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000080  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000186  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000001b5  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000001c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ab4  00000000  00000000  0000022b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000734  00000000  00000000  00000cdf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000378  00000000  00000000  00001413  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c8  00000000  00000000  0000178c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  00001854  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000f0  00000000  00000000  00001a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00001b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000104  00000104  00000178  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001ba4  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.i2c_init 0000000c  000000f0  000000f0  00000164  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.i2c_start 00000010  000000e0  000000e0  00000154  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.i2c_stop 00000008  000000fc  000000fc  00000170  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.i2c_write 00000014  000000cc  000000cc  00000140  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.main    00000036  00000080  00000080  000000f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_fini 00000002  0000010c  0000010c  00000180  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__dummy_funcs_on_exit 00000002  0000010e  0000010e  00000182  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__dummy_simulator_exit 00000002  00000110  00000110  00000184  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.exit    00000016  000000b6  000000b6  0000012a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text._Exit   00000004  00000108  00000108  0000017c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
   8:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
   c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  10:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  14:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  18:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  1c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  20:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  24:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  28:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  2c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  30:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  34:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  38:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  3c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  40:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  44:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  48:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  4c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  50:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  54:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  58:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  5c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  60:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  64:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <_etext>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <exit>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>

Disassembly of section .text:

00000104 <__bad_interrupt>:
 104:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.i2c_init:

000000f0 <i2c_init>:
		i++;
	}
}

void i2c_init(void){
	TWSR = 0;
  f0:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
	TWBR = ((F_CPU / 100000UL) - 16) / 2;
  f4:	8d ef       	ldi	r24, 0xFD	; 253
  f6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7fc0b8>
  fa:	08 95       	ret

Disassembly of section .text.i2c_start:

000000e0 <i2c_start>:
	uint8_t i = 0;
	while (myString[i]) {
		transmitByte(myString[i]);
		i++;
	}
}
  e0:	84 ea       	ldi	r24, 0xA4	; 164
  e2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7fc0bc>
  e6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7fc0bc>
  ea:	88 23       	and	r24, r24
  ec:	e4 f7       	brge	.-8      	; 0xe6 <i2c_start+0x6>
  ee:	08 95       	ret

Disassembly of section .text.i2c_stop:

000000fc <i2c_stop>:
void i2c_start(void) {
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
	while (!(TWCR & (1<<TWINT)));
}
void i2c_stop(void) {
	TWCR = (1<<TWINT) | (1<<TWSTO) | (1<<TWEN);
  fc:	84 e9       	ldi	r24, 0x94	; 148
  fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7fc0bc>
 102:	08 95       	ret

Disassembly of section .text.i2c_write:

000000cc <i2c_write>:
	uint8_t i = 0;
	while (myString[i]) {
		transmitByte(myString[i]);
		i++;
	}
}
  cc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7fc0bb>
  d0:	84 e8       	ldi	r24, 0x84	; 132
  d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7fc0bc>
  d6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7fc0bc>
  da:	88 23       	and	r24, r24
  dc:	e4 f7       	brge	.-8      	; 0xd6 <i2c_write+0xa>
  de:	08 95       	ret

Disassembly of section .text.main:

00000080 <main>:
  80:	0e 94 78 00 	call	0xf0	; 0xf0 <i2c_init>
  84:	0e 94 70 00 	call	0xe0	; 0xe0 <i2c_start>
  88:	81 e4       	ldi	r24, 0x41	; 65
  8a:	0e 94 66 00 	call	0xcc	; 0xcc <i2c_write>
  8e:	c0 91 bb 00 	lds	r28, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7fc0bb>
  92:	0e 94 7e 00 	call	0xfc	; 0xfc <i2c_stop>
  96:	c1 34       	cpi	r28, 0x41	; 65
  98:	21 f4       	brne	.+8      	; 0xa2 <main+0x22>
  9a:	85 b1       	in	r24, 0x05	; 5
  9c:	81 60       	ori	r24, 0x01	; 1
  9e:	85 b9       	out	0x05, r24	; 5
  a0:	03 c0       	rjmp	.+6      	; 0xa8 <main+0x28>
  a2:	85 b1       	in	r24, 0x05	; 5
  a4:	8e 7f       	andi	r24, 0xFE	; 254
  a6:	85 b9       	out	0x05, r24	; 5
  a8:	87 e8       	ldi	r24, 0x87	; 135
  aa:	93 e1       	ldi	r25, 0x13	; 19
  ac:	01 97       	sbiw	r24, 0x01	; 1
  ae:	f1 f7       	brne	.-4      	; 0xac <main+0x2c>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <main+0x32>
  b2:	00 00       	nop
  b4:	e7 cf       	rjmp	.-50     	; 0x84 <main+0x4>

Disassembly of section .text.__dummy_fini:

0000010c <_fini>:
 10c:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000010e <__funcs_on_exit>:
 10e:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000110 <__simulator_exit>:
 110:	08 95       	ret

Disassembly of section .text.exit:

000000b6 <exit>:
  b6:	ec 01       	movw	r28, r24
  b8:	0e 94 87 00 	call	0x10e	; 0x10e <__funcs_on_exit>
  bc:	0e 94 86 00 	call	0x10c	; 0x10c <_fini>
  c0:	ce 01       	movw	r24, r28
  c2:	0e 94 88 00 	call	0x110	; 0x110 <__simulator_exit>
  c6:	ce 01       	movw	r24, r28
  c8:	0e 94 84 00 	call	0x108	; 0x108 <_Exit>

Disassembly of section .text._Exit:

00000108 <_Exit>:
 108:	0e 94 3e 00 	call	0x7c	; 0x7c <_exit>
