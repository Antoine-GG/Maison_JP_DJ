
ATmega32_SPI_Slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000780  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00800060  00000780  000007f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  0000081a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000878  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  000008b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b35  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007fc  00000000  00000000  00001479  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000563  00000000  00000000  00001c75  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  000021d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f5  00000000  00000000  000022cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000027b  00000000  00000000  000027c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002a3c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e8       	ldi	r30, 0x80	; 128
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 38       	cpi	r26, 0x86	; 134
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 be 03 	jmp	0x77c	; 0x77c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include <string.h>						/* Include string header file */
#include "LCD_16x2_H_file.h"			/* Include LCD header file */
#include "SPI_Slave_H_file.h"			/* Include SPI slave header file */

int main(void)
{
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	00 d0       	rcall	.+0      	; 0x88 <main+0x6>
  88:	00 d0       	rcall	.+0      	; 0x8a <main+0x8>
  8a:	1f 92       	push	r1
  8c:	cd b7       	in	r28, 0x3d	; 61
  8e:	de b7       	in	r29, 0x3e	; 62
	uint8_t count;
	char buffer[5];
	
	LCD_Init();
  90:	0e 94 99 00 	call	0x132	; 0x132 <LCD_Init>
	SPI_Init();
  94:	0e 94 db 00 	call	0x1b6	; 0x1b6 <SPI_Init>
	
	LCD_String_xy(1, 0, "Slave Device");
  98:	40 e6       	ldi	r20, 0x60	; 96
  9a:	50 e0       	ldi	r21, 0x00	; 0
  9c:	60 e0       	ldi	r22, 0x00	; 0
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	0e 94 c3 00 	call	0x186	; 0x186 <LCD_String_xy>
	LCD_String_xy(2, 0, "Receive Data:    ");
  a4:	4d e6       	ldi	r20, 0x6D	; 109
  a6:	50 e0       	ldi	r21, 0x00	; 0
  a8:	60 e0       	ldi	r22, 0x00	; 0
  aa:	82 e0       	ldi	r24, 0x02	; 2
  ac:	0e 94 c3 00 	call	0x186	; 0x186 <LCD_String_xy>
	while (1)
	{
		count = SPI_Receive();
		sprintf(buffer, "%d   ", count);
  b0:	0f 2e       	mov	r0, r31
  b2:	ff e7       	ldi	r31, 0x7F	; 127
  b4:	ef 2e       	mov	r14, r31
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	ff 2e       	mov	r15, r31
  ba:	f0 2d       	mov	r31, r0
  bc:	8e 01       	movw	r16, r28
  be:	0f 5f       	subi	r16, 0xFF	; 255
  c0:	1f 4f       	sbci	r17, 0xFF	; 255
	
	LCD_String_xy(1, 0, "Slave Device");
	LCD_String_xy(2, 0, "Receive Data:    ");
	while (1)
	{
		count = SPI_Receive();
  c2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <SPI_Receive>
		sprintf(buffer, "%d   ", count);
  c6:	1f 92       	push	r1
  c8:	8f 93       	push	r24
  ca:	ff 92       	push	r15
  cc:	ef 92       	push	r14
  ce:	1f 93       	push	r17
  d0:	0f 93       	push	r16
  d2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <sprintf>
		LCD_String_xy(2, 13, buffer);
  d6:	a8 01       	movw	r20, r16
  d8:	6d e0       	ldi	r22, 0x0D	; 13
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	0e 94 c3 00 	call	0x186	; 0x186 <LCD_String_xy>
	}
  e0:	0f 90       	pop	r0
  e2:	0f 90       	pop	r0
  e4:	0f 90       	pop	r0
  e6:	0f 90       	pop	r0
  e8:	0f 90       	pop	r0
  ea:	0f 90       	pop	r0
  ec:	ea cf       	rjmp	.-44     	; 0xc2 <main+0x40>

000000ee <LCD_Command>:
#include "LCD_16x2_H_file.h"						/* Include LCD header file */


void LCD_Command (char cmd)							/* LCD command write function */
{
	LCD_Data_Port = cmd;							/* Write command data to LCD data port */
  ee:	82 bb       	out	0x12, r24	; 18
	LCD_Command_Port &= ~((1<<RS)|(1<<RW));			/* Make RS LOW (command reg.), RW LOW (Write) */
  f0:	85 b3       	in	r24, 0x15	; 21
  f2:	87 7e       	andi	r24, 0xE7	; 231
  f4:	85 bb       	out	0x15, r24	; 21
	LCD_Command_Port |= (1<<EN);					/* High to Low transition on EN (Enable) */
  f6:	aa 9a       	sbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	8a 95       	dec	r24
  fc:	f1 f7       	brne	.-4      	; 0xfa <LCD_Command+0xc>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <LCD_Command+0x12>
	_delay_us(1);
	LCD_Command_Port &= ~(1<<EN);
 100:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 102:	8f e6       	ldi	r24, 0x6F	; 111
 104:	97 e1       	ldi	r25, 0x17	; 23
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <LCD_Command+0x18>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <LCD_Command+0x1e>
 10c:	00 00       	nop
 10e:	08 95       	ret

00000110 <LCD_Char>:
	_delay_ms(3);									/* Wait little bit */
}

void LCD_Char (char char_data)						/* LCD data write function */
{
	LCD_Data_Port = char_data;						/* Write data to LCD data port */
 110:	82 bb       	out	0x12, r24	; 18
	LCD_Command_Port &= ~(1<<RW);					/* Make RW LOW (Write) */
 112:	ab 98       	cbi	0x15, 3	; 21
	LCD_Command_Port |= (1<<EN)|(1<<RS);			/* Make RS HIGH (data reg.) and High to Low transition on EN (Enable) */
 114:	85 b3       	in	r24, 0x15	; 21
 116:	84 61       	ori	r24, 0x14	; 20
 118:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11a:	82 e0       	ldi	r24, 0x02	; 2
 11c:	8a 95       	dec	r24
 11e:	f1 f7       	brne	.-4      	; 0x11c <LCD_Char+0xc>
 120:	00 c0       	rjmp	.+0      	; 0x122 <LCD_Char+0x12>
	_delay_us(1);
	LCD_Command_Port &= ~(1<<EN);
 122:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 124:	8f ec       	ldi	r24, 0xCF	; 207
 126:	97 e0       	ldi	r25, 0x07	; 7
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <LCD_Char+0x18>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <LCD_Char+0x1e>
 12e:	00 00       	nop
 130:	08 95       	ret

00000132 <LCD_Init>:
	_delay_ms(1);									/* Wait little bit */
}

void LCD_Init (void)								/* LCD Initialize function */
{
	LCD_Command_Dir |= (1<<RS)|(1<<RW)|(1<<EN);		/* Make LCD command port direction as o/p */
 132:	84 b3       	in	r24, 0x14	; 20
 134:	8c 61       	ori	r24, 0x1C	; 28
 136:	84 bb       	out	0x14, r24	; 20
	LCD_Data_Dir = 0xFF;							/* Make LCD data port direction as o/p */
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	81 bb       	out	0x11, r24	; 17
 13c:	8f e3       	ldi	r24, 0x3F	; 63
 13e:	9c e9       	ldi	r25, 0x9C	; 156
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <LCD_Init+0xe>
 144:	00 c0       	rjmp	.+0      	; 0x146 <LCD_Init+0x14>
 146:	00 00       	nop
	
	_delay_ms(20);									/* LCD power up time to get things ready, it should always >15ms */
	LCD_Command (0x38);								/* Initialize 16X2 LCD in 8bit mode */
 148:	88 e3       	ldi	r24, 0x38	; 56
 14a:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_Command (0x0C);								/* Display ON, Cursor OFF command */
 14e:	8c e0       	ldi	r24, 0x0C	; 12
 150:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_Command (0x06);								/* Auto Increment cursor */
 154:	86 e0       	ldi	r24, 0x06	; 6
 156:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_Command (0x01);								/* Clear LCD command */
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_Command (0x80);								/* 8 is for first line and 0 is for 0th position */
 160:	80 e8       	ldi	r24, 0x80	; 128
 162:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
 166:	08 95       	ret

00000168 <LCD_String>:
}

void LCD_String (char *str)							/* Send string to LCD function */
{
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	ec 01       	movw	r28, r24
	int i;
	for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
 16e:	88 81       	ld	r24, Y
 170:	88 23       	and	r24, r24
 172:	31 f0       	breq	.+12     	; 0x180 <LCD_String+0x18>
 174:	21 96       	adiw	r28, 0x01	; 1
	{
		LCD_Char (str[i]);							/* Call LCD data write */
 176:	0e 94 88 00 	call	0x110	; 0x110 <LCD_Char>
}

void LCD_String (char *str)							/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
 17a:	89 91       	ld	r24, Y+
 17c:	81 11       	cpse	r24, r1
 17e:	fb cf       	rjmp	.-10     	; 0x176 <LCD_String+0xe>
	{
		LCD_Char (str[i]);							/* Call LCD data write */
	}
}
 180:	df 91       	pop	r29
 182:	cf 91       	pop	r28
 184:	08 95       	ret

00000186 <LCD_String_xy>:

void LCD_String_xy (char row, char pos, char *str)	/* Send string to LCD function */
{
 186:	cf 93       	push	r28
 188:	df 93       	push	r29
 18a:	ea 01       	movw	r28, r20
	if (row == 1)
 18c:	81 30       	cpi	r24, 0x01	; 1
 18e:	31 f4       	brne	.+12     	; 0x19c <LCD_String_xy+0x16>
		LCD_Command((pos & 0x0F)|0x80);				/* Command of first row and required position<16 */
 190:	86 2f       	mov	r24, r22
 192:	8f 70       	andi	r24, 0x0F	; 15
 194:	80 68       	ori	r24, 0x80	; 128
 196:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
 19a:	07 c0       	rjmp	.+14     	; 0x1aa <LCD_String_xy+0x24>
	else if (row == 2)
 19c:	82 30       	cpi	r24, 0x02	; 2
 19e:	29 f4       	brne	.+10     	; 0x1aa <LCD_String_xy+0x24>
		LCD_Command((pos & 0x0F)|0xC0);				/* Command of Second row and required position<16 */
 1a0:	86 2f       	mov	r24, r22
 1a2:	8f 70       	andi	r24, 0x0F	; 15
 1a4:	80 6c       	ori	r24, 0xC0	; 192
 1a6:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_String(str);								/* Call LCD string function */
 1aa:	ce 01       	movw	r24, r28
 1ac:	0e 94 b4 00 	call	0x168	; 0x168 <LCD_String>
}
 1b0:	df 91       	pop	r29
 1b2:	cf 91       	pop	r28
 1b4:	08 95       	ret

000001b6 <SPI_Init>:
char SPI_Transmit(char data)					/* SPI transmit data function */
{
	SPDR = data;								/* Write data to SPI data register */
	while(!(SPSR & (1<<SPIF)));					/* Wait till transmission complete */
	return(SPDR);								/* return received data */
}
 1b6:	87 b3       	in	r24, 0x17	; 23
 1b8:	8f 74       	andi	r24, 0x4F	; 79
 1ba:	87 bb       	out	0x17, r24	; 23
 1bc:	be 9a       	sbi	0x17, 6	; 23
 1be:	80 e4       	ldi	r24, 0x40	; 64
 1c0:	8d b9       	out	0x0d, r24	; 13
 1c2:	08 95       	ret

000001c4 <SPI_Receive>:

char SPI_Receive()								/* SPI Receive data function */
{
	while(!(SPSR & (1<<SPIF)));					/* Wait till reception complete */
 1c4:	77 9b       	sbis	0x0e, 7	; 14
 1c6:	fe cf       	rjmp	.-4      	; 0x1c4 <SPI_Receive>
	return(SPDR);								/* return received data */
 1c8:	8f b1       	in	r24, 0x0f	; 15
}
 1ca:	08 95       	ret

000001cc <sprintf>:
 1cc:	ae e0       	ldi	r26, 0x0E	; 14
 1ce:	b0 e0       	ldi	r27, 0x00	; 0
 1d0:	ec ee       	ldi	r30, 0xEC	; 236
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	0c 94 95 03 	jmp	0x72a	; 0x72a <__prologue_saves__+0x1c>
 1d8:	0d 89       	ldd	r16, Y+21	; 0x15
 1da:	1e 89       	ldd	r17, Y+22	; 0x16
 1dc:	86 e0       	ldi	r24, 0x06	; 6
 1de:	8c 83       	std	Y+4, r24	; 0x04
 1e0:	1a 83       	std	Y+2, r17	; 0x02
 1e2:	09 83       	std	Y+1, r16	; 0x01
 1e4:	8f ef       	ldi	r24, 0xFF	; 255
 1e6:	9f e7       	ldi	r25, 0x7F	; 127
 1e8:	9e 83       	std	Y+6, r25	; 0x06
 1ea:	8d 83       	std	Y+5, r24	; 0x05
 1ec:	ae 01       	movw	r20, r28
 1ee:	47 5e       	subi	r20, 0xE7	; 231
 1f0:	5f 4f       	sbci	r21, 0xFF	; 255
 1f2:	6f 89       	ldd	r22, Y+23	; 0x17
 1f4:	78 8d       	ldd	r23, Y+24	; 0x18
 1f6:	ce 01       	movw	r24, r28
 1f8:	01 96       	adiw	r24, 0x01	; 1
 1fa:	0e 94 09 01 	call	0x212	; 0x212 <vfprintf>
 1fe:	2f 81       	ldd	r18, Y+7	; 0x07
 200:	38 85       	ldd	r19, Y+8	; 0x08
 202:	f8 01       	movw	r30, r16
 204:	e2 0f       	add	r30, r18
 206:	f3 1f       	adc	r31, r19
 208:	10 82       	st	Z, r1
 20a:	2e 96       	adiw	r28, 0x0e	; 14
 20c:	e4 e0       	ldi	r30, 0x04	; 4
 20e:	0c 94 b1 03 	jmp	0x762	; 0x762 <__epilogue_restores__+0x1c>

00000212 <vfprintf>:
 212:	ac e0       	ldi	r26, 0x0C	; 12
 214:	b0 e0       	ldi	r27, 0x00	; 0
 216:	ef e0       	ldi	r30, 0x0F	; 15
 218:	f1 e0       	ldi	r31, 0x01	; 1
 21a:	0c 94 87 03 	jmp	0x70e	; 0x70e <__prologue_saves__>
 21e:	7c 01       	movw	r14, r24
 220:	6b 01       	movw	r12, r22
 222:	8a 01       	movw	r16, r20
 224:	fc 01       	movw	r30, r24
 226:	17 82       	std	Z+7, r1	; 0x07
 228:	16 82       	std	Z+6, r1	; 0x06
 22a:	83 81       	ldd	r24, Z+3	; 0x03
 22c:	81 ff       	sbrs	r24, 1
 22e:	bd c1       	rjmp	.+890    	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 230:	ce 01       	movw	r24, r28
 232:	01 96       	adiw	r24, 0x01	; 1
 234:	4c 01       	movw	r8, r24
 236:	f7 01       	movw	r30, r14
 238:	93 81       	ldd	r25, Z+3	; 0x03
 23a:	f6 01       	movw	r30, r12
 23c:	93 fd       	sbrc	r25, 3
 23e:	85 91       	lpm	r24, Z+
 240:	93 ff       	sbrs	r25, 3
 242:	81 91       	ld	r24, Z+
 244:	6f 01       	movw	r12, r30
 246:	88 23       	and	r24, r24
 248:	09 f4       	brne	.+2      	; 0x24c <vfprintf+0x3a>
 24a:	ab c1       	rjmp	.+854    	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 24c:	85 32       	cpi	r24, 0x25	; 37
 24e:	39 f4       	brne	.+14     	; 0x25e <vfprintf+0x4c>
 250:	93 fd       	sbrc	r25, 3
 252:	85 91       	lpm	r24, Z+
 254:	93 ff       	sbrs	r25, 3
 256:	81 91       	ld	r24, Z+
 258:	6f 01       	movw	r12, r30
 25a:	85 32       	cpi	r24, 0x25	; 37
 25c:	29 f4       	brne	.+10     	; 0x268 <vfprintf+0x56>
 25e:	b7 01       	movw	r22, r14
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 266:	e7 cf       	rjmp	.-50     	; 0x236 <vfprintf+0x24>
 268:	51 2c       	mov	r5, r1
 26a:	31 2c       	mov	r3, r1
 26c:	20 e0       	ldi	r18, 0x00	; 0
 26e:	20 32       	cpi	r18, 0x20	; 32
 270:	a0 f4       	brcc	.+40     	; 0x29a <vfprintf+0x88>
 272:	8b 32       	cpi	r24, 0x2B	; 43
 274:	69 f0       	breq	.+26     	; 0x290 <vfprintf+0x7e>
 276:	30 f4       	brcc	.+12     	; 0x284 <vfprintf+0x72>
 278:	80 32       	cpi	r24, 0x20	; 32
 27a:	59 f0       	breq	.+22     	; 0x292 <vfprintf+0x80>
 27c:	83 32       	cpi	r24, 0x23	; 35
 27e:	69 f4       	brne	.+26     	; 0x29a <vfprintf+0x88>
 280:	20 61       	ori	r18, 0x10	; 16
 282:	2c c0       	rjmp	.+88     	; 0x2dc <vfprintf+0xca>
 284:	8d 32       	cpi	r24, 0x2D	; 45
 286:	39 f0       	breq	.+14     	; 0x296 <vfprintf+0x84>
 288:	80 33       	cpi	r24, 0x30	; 48
 28a:	39 f4       	brne	.+14     	; 0x29a <vfprintf+0x88>
 28c:	21 60       	ori	r18, 0x01	; 1
 28e:	26 c0       	rjmp	.+76     	; 0x2dc <vfprintf+0xca>
 290:	22 60       	ori	r18, 0x02	; 2
 292:	24 60       	ori	r18, 0x04	; 4
 294:	23 c0       	rjmp	.+70     	; 0x2dc <vfprintf+0xca>
 296:	28 60       	ori	r18, 0x08	; 8
 298:	21 c0       	rjmp	.+66     	; 0x2dc <vfprintf+0xca>
 29a:	27 fd       	sbrc	r18, 7
 29c:	27 c0       	rjmp	.+78     	; 0x2ec <vfprintf+0xda>
 29e:	30 ed       	ldi	r19, 0xD0	; 208
 2a0:	38 0f       	add	r19, r24
 2a2:	3a 30       	cpi	r19, 0x0A	; 10
 2a4:	78 f4       	brcc	.+30     	; 0x2c4 <vfprintf+0xb2>
 2a6:	26 ff       	sbrs	r18, 6
 2a8:	06 c0       	rjmp	.+12     	; 0x2b6 <vfprintf+0xa4>
 2aa:	fa e0       	ldi	r31, 0x0A	; 10
 2ac:	5f 9e       	mul	r5, r31
 2ae:	30 0d       	add	r19, r0
 2b0:	11 24       	eor	r1, r1
 2b2:	53 2e       	mov	r5, r19
 2b4:	13 c0       	rjmp	.+38     	; 0x2dc <vfprintf+0xca>
 2b6:	8a e0       	ldi	r24, 0x0A	; 10
 2b8:	38 9e       	mul	r3, r24
 2ba:	30 0d       	add	r19, r0
 2bc:	11 24       	eor	r1, r1
 2be:	33 2e       	mov	r3, r19
 2c0:	20 62       	ori	r18, 0x20	; 32
 2c2:	0c c0       	rjmp	.+24     	; 0x2dc <vfprintf+0xca>
 2c4:	8e 32       	cpi	r24, 0x2E	; 46
 2c6:	21 f4       	brne	.+8      	; 0x2d0 <vfprintf+0xbe>
 2c8:	26 fd       	sbrc	r18, 6
 2ca:	6b c1       	rjmp	.+726    	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 2cc:	20 64       	ori	r18, 0x40	; 64
 2ce:	06 c0       	rjmp	.+12     	; 0x2dc <vfprintf+0xca>
 2d0:	8c 36       	cpi	r24, 0x6C	; 108
 2d2:	11 f4       	brne	.+4      	; 0x2d8 <vfprintf+0xc6>
 2d4:	20 68       	ori	r18, 0x80	; 128
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <vfprintf+0xca>
 2d8:	88 36       	cpi	r24, 0x68	; 104
 2da:	41 f4       	brne	.+16     	; 0x2ec <vfprintf+0xda>
 2dc:	f6 01       	movw	r30, r12
 2de:	93 fd       	sbrc	r25, 3
 2e0:	85 91       	lpm	r24, Z+
 2e2:	93 ff       	sbrs	r25, 3
 2e4:	81 91       	ld	r24, Z+
 2e6:	6f 01       	movw	r12, r30
 2e8:	81 11       	cpse	r24, r1
 2ea:	c1 cf       	rjmp	.-126    	; 0x26e <vfprintf+0x5c>
 2ec:	98 2f       	mov	r25, r24
 2ee:	9f 7d       	andi	r25, 0xDF	; 223
 2f0:	95 54       	subi	r25, 0x45	; 69
 2f2:	93 30       	cpi	r25, 0x03	; 3
 2f4:	28 f4       	brcc	.+10     	; 0x300 <vfprintf+0xee>
 2f6:	0c 5f       	subi	r16, 0xFC	; 252
 2f8:	1f 4f       	sbci	r17, 0xFF	; 255
 2fa:	ff e3       	ldi	r31, 0x3F	; 63
 2fc:	f9 83       	std	Y+1, r31	; 0x01
 2fe:	0d c0       	rjmp	.+26     	; 0x31a <vfprintf+0x108>
 300:	83 36       	cpi	r24, 0x63	; 99
 302:	31 f0       	breq	.+12     	; 0x310 <vfprintf+0xfe>
 304:	83 37       	cpi	r24, 0x73	; 115
 306:	71 f0       	breq	.+28     	; 0x324 <vfprintf+0x112>
 308:	83 35       	cpi	r24, 0x53	; 83
 30a:	09 f0       	breq	.+2      	; 0x30e <vfprintf+0xfc>
 30c:	5b c0       	rjmp	.+182    	; 0x3c4 <vfprintf+0x1b2>
 30e:	22 c0       	rjmp	.+68     	; 0x354 <vfprintf+0x142>
 310:	f8 01       	movw	r30, r16
 312:	80 81       	ld	r24, Z
 314:	89 83       	std	Y+1, r24	; 0x01
 316:	0e 5f       	subi	r16, 0xFE	; 254
 318:	1f 4f       	sbci	r17, 0xFF	; 255
 31a:	44 24       	eor	r4, r4
 31c:	43 94       	inc	r4
 31e:	51 2c       	mov	r5, r1
 320:	54 01       	movw	r10, r8
 322:	15 c0       	rjmp	.+42     	; 0x34e <vfprintf+0x13c>
 324:	38 01       	movw	r6, r16
 326:	f2 e0       	ldi	r31, 0x02	; 2
 328:	6f 0e       	add	r6, r31
 32a:	71 1c       	adc	r7, r1
 32c:	f8 01       	movw	r30, r16
 32e:	a0 80       	ld	r10, Z
 330:	b1 80       	ldd	r11, Z+1	; 0x01
 332:	26 ff       	sbrs	r18, 6
 334:	03 c0       	rjmp	.+6      	; 0x33c <vfprintf+0x12a>
 336:	65 2d       	mov	r22, r5
 338:	70 e0       	ldi	r23, 0x00	; 0
 33a:	02 c0       	rjmp	.+4      	; 0x340 <vfprintf+0x12e>
 33c:	6f ef       	ldi	r22, 0xFF	; 255
 33e:	7f ef       	ldi	r23, 0xFF	; 255
 340:	c5 01       	movw	r24, r10
 342:	2c 87       	std	Y+12, r18	; 0x0c
 344:	0e 94 e6 02 	call	0x5cc	; 0x5cc <strnlen>
 348:	2c 01       	movw	r4, r24
 34a:	83 01       	movw	r16, r6
 34c:	2c 85       	ldd	r18, Y+12	; 0x0c
 34e:	2f 77       	andi	r18, 0x7F	; 127
 350:	22 2e       	mov	r2, r18
 352:	17 c0       	rjmp	.+46     	; 0x382 <vfprintf+0x170>
 354:	38 01       	movw	r6, r16
 356:	f2 e0       	ldi	r31, 0x02	; 2
 358:	6f 0e       	add	r6, r31
 35a:	71 1c       	adc	r7, r1
 35c:	f8 01       	movw	r30, r16
 35e:	a0 80       	ld	r10, Z
 360:	b1 80       	ldd	r11, Z+1	; 0x01
 362:	26 ff       	sbrs	r18, 6
 364:	03 c0       	rjmp	.+6      	; 0x36c <vfprintf+0x15a>
 366:	65 2d       	mov	r22, r5
 368:	70 e0       	ldi	r23, 0x00	; 0
 36a:	02 c0       	rjmp	.+4      	; 0x370 <vfprintf+0x15e>
 36c:	6f ef       	ldi	r22, 0xFF	; 255
 36e:	7f ef       	ldi	r23, 0xFF	; 255
 370:	c5 01       	movw	r24, r10
 372:	2c 87       	std	Y+12, r18	; 0x0c
 374:	0e 94 db 02 	call	0x5b6	; 0x5b6 <strnlen_P>
 378:	2c 01       	movw	r4, r24
 37a:	2c 85       	ldd	r18, Y+12	; 0x0c
 37c:	20 68       	ori	r18, 0x80	; 128
 37e:	22 2e       	mov	r2, r18
 380:	83 01       	movw	r16, r6
 382:	23 fc       	sbrc	r2, 3
 384:	1b c0       	rjmp	.+54     	; 0x3bc <vfprintf+0x1aa>
 386:	83 2d       	mov	r24, r3
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	48 16       	cp	r4, r24
 38c:	59 06       	cpc	r5, r25
 38e:	b0 f4       	brcc	.+44     	; 0x3bc <vfprintf+0x1aa>
 390:	b7 01       	movw	r22, r14
 392:	80 e2       	ldi	r24, 0x20	; 32
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 39a:	3a 94       	dec	r3
 39c:	f4 cf       	rjmp	.-24     	; 0x386 <vfprintf+0x174>
 39e:	f5 01       	movw	r30, r10
 3a0:	27 fc       	sbrc	r2, 7
 3a2:	85 91       	lpm	r24, Z+
 3a4:	27 fe       	sbrs	r2, 7
 3a6:	81 91       	ld	r24, Z+
 3a8:	5f 01       	movw	r10, r30
 3aa:	b7 01       	movw	r22, r14
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 3b2:	31 10       	cpse	r3, r1
 3b4:	3a 94       	dec	r3
 3b6:	f1 e0       	ldi	r31, 0x01	; 1
 3b8:	4f 1a       	sub	r4, r31
 3ba:	51 08       	sbc	r5, r1
 3bc:	41 14       	cp	r4, r1
 3be:	51 04       	cpc	r5, r1
 3c0:	71 f7       	brne	.-36     	; 0x39e <vfprintf+0x18c>
 3c2:	e5 c0       	rjmp	.+458    	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 3c4:	84 36       	cpi	r24, 0x64	; 100
 3c6:	11 f0       	breq	.+4      	; 0x3cc <vfprintf+0x1ba>
 3c8:	89 36       	cpi	r24, 0x69	; 105
 3ca:	39 f5       	brne	.+78     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3cc:	f8 01       	movw	r30, r16
 3ce:	27 ff       	sbrs	r18, 7
 3d0:	07 c0       	rjmp	.+14     	; 0x3e0 <vfprintf+0x1ce>
 3d2:	60 81       	ld	r22, Z
 3d4:	71 81       	ldd	r23, Z+1	; 0x01
 3d6:	82 81       	ldd	r24, Z+2	; 0x02
 3d8:	93 81       	ldd	r25, Z+3	; 0x03
 3da:	0c 5f       	subi	r16, 0xFC	; 252
 3dc:	1f 4f       	sbci	r17, 0xFF	; 255
 3de:	08 c0       	rjmp	.+16     	; 0x3f0 <vfprintf+0x1de>
 3e0:	60 81       	ld	r22, Z
 3e2:	71 81       	ldd	r23, Z+1	; 0x01
 3e4:	07 2e       	mov	r0, r23
 3e6:	00 0c       	add	r0, r0
 3e8:	88 0b       	sbc	r24, r24
 3ea:	99 0b       	sbc	r25, r25
 3ec:	0e 5f       	subi	r16, 0xFE	; 254
 3ee:	1f 4f       	sbci	r17, 0xFF	; 255
 3f0:	2f 76       	andi	r18, 0x6F	; 111
 3f2:	72 2e       	mov	r7, r18
 3f4:	97 ff       	sbrs	r25, 7
 3f6:	09 c0       	rjmp	.+18     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3f8:	90 95       	com	r25
 3fa:	80 95       	com	r24
 3fc:	70 95       	com	r23
 3fe:	61 95       	neg	r22
 400:	7f 4f       	sbci	r23, 0xFF	; 255
 402:	8f 4f       	sbci	r24, 0xFF	; 255
 404:	9f 4f       	sbci	r25, 0xFF	; 255
 406:	20 68       	ori	r18, 0x80	; 128
 408:	72 2e       	mov	r7, r18
 40a:	2a e0       	ldi	r18, 0x0A	; 10
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	a4 01       	movw	r20, r8
 410:	0e 94 29 03 	call	0x652	; 0x652 <__ultoa_invert>
 414:	a8 2e       	mov	r10, r24
 416:	a8 18       	sub	r10, r8
 418:	44 c0       	rjmp	.+136    	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 41a:	85 37       	cpi	r24, 0x75	; 117
 41c:	29 f4       	brne	.+10     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 41e:	2f 7e       	andi	r18, 0xEF	; 239
 420:	b2 2e       	mov	r11, r18
 422:	2a e0       	ldi	r18, 0x0A	; 10
 424:	30 e0       	ldi	r19, 0x00	; 0
 426:	25 c0       	rjmp	.+74     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 428:	f2 2f       	mov	r31, r18
 42a:	f9 7f       	andi	r31, 0xF9	; 249
 42c:	bf 2e       	mov	r11, r31
 42e:	8f 36       	cpi	r24, 0x6F	; 111
 430:	c1 f0       	breq	.+48     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 432:	18 f4       	brcc	.+6      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 434:	88 35       	cpi	r24, 0x58	; 88
 436:	79 f0       	breq	.+30     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 438:	b4 c0       	rjmp	.+360    	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 43a:	80 37       	cpi	r24, 0x70	; 112
 43c:	19 f0       	breq	.+6      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 43e:	88 37       	cpi	r24, 0x78	; 120
 440:	21 f0       	breq	.+8      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 442:	af c0       	rjmp	.+350    	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 444:	2f 2f       	mov	r18, r31
 446:	20 61       	ori	r18, 0x10	; 16
 448:	b2 2e       	mov	r11, r18
 44a:	b4 fe       	sbrs	r11, 4
 44c:	0d c0       	rjmp	.+26     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 44e:	8b 2d       	mov	r24, r11
 450:	84 60       	ori	r24, 0x04	; 4
 452:	b8 2e       	mov	r11, r24
 454:	09 c0       	rjmp	.+18     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 456:	24 ff       	sbrs	r18, 4
 458:	0a c0       	rjmp	.+20     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 45a:	9f 2f       	mov	r25, r31
 45c:	96 60       	ori	r25, 0x06	; 6
 45e:	b9 2e       	mov	r11, r25
 460:	06 c0       	rjmp	.+12     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 462:	28 e0       	ldi	r18, 0x08	; 8
 464:	30 e0       	ldi	r19, 0x00	; 0
 466:	05 c0       	rjmp	.+10     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 468:	20 e1       	ldi	r18, 0x10	; 16
 46a:	30 e0       	ldi	r19, 0x00	; 0
 46c:	02 c0       	rjmp	.+4      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 46e:	20 e1       	ldi	r18, 0x10	; 16
 470:	32 e0       	ldi	r19, 0x02	; 2
 472:	f8 01       	movw	r30, r16
 474:	b7 fe       	sbrs	r11, 7
 476:	07 c0       	rjmp	.+14     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 478:	60 81       	ld	r22, Z
 47a:	71 81       	ldd	r23, Z+1	; 0x01
 47c:	82 81       	ldd	r24, Z+2	; 0x02
 47e:	93 81       	ldd	r25, Z+3	; 0x03
 480:	0c 5f       	subi	r16, 0xFC	; 252
 482:	1f 4f       	sbci	r17, 0xFF	; 255
 484:	06 c0       	rjmp	.+12     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 486:	60 81       	ld	r22, Z
 488:	71 81       	ldd	r23, Z+1	; 0x01
 48a:	80 e0       	ldi	r24, 0x00	; 0
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	0e 5f       	subi	r16, 0xFE	; 254
 490:	1f 4f       	sbci	r17, 0xFF	; 255
 492:	a4 01       	movw	r20, r8
 494:	0e 94 29 03 	call	0x652	; 0x652 <__ultoa_invert>
 498:	a8 2e       	mov	r10, r24
 49a:	a8 18       	sub	r10, r8
 49c:	fb 2d       	mov	r31, r11
 49e:	ff 77       	andi	r31, 0x7F	; 127
 4a0:	7f 2e       	mov	r7, r31
 4a2:	76 fe       	sbrs	r7, 6
 4a4:	0b c0       	rjmp	.+22     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4a6:	37 2d       	mov	r19, r7
 4a8:	3e 7f       	andi	r19, 0xFE	; 254
 4aa:	a5 14       	cp	r10, r5
 4ac:	50 f4       	brcc	.+20     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4ae:	74 fe       	sbrs	r7, 4
 4b0:	0a c0       	rjmp	.+20     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4b2:	72 fc       	sbrc	r7, 2
 4b4:	08 c0       	rjmp	.+16     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4b6:	37 2d       	mov	r19, r7
 4b8:	3e 7e       	andi	r19, 0xEE	; 238
 4ba:	05 c0       	rjmp	.+10     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4bc:	ba 2c       	mov	r11, r10
 4be:	37 2d       	mov	r19, r7
 4c0:	03 c0       	rjmp	.+6      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c2:	ba 2c       	mov	r11, r10
 4c4:	01 c0       	rjmp	.+2      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c6:	b5 2c       	mov	r11, r5
 4c8:	34 ff       	sbrs	r19, 4
 4ca:	0d c0       	rjmp	.+26     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4cc:	fe 01       	movw	r30, r28
 4ce:	ea 0d       	add	r30, r10
 4d0:	f1 1d       	adc	r31, r1
 4d2:	80 81       	ld	r24, Z
 4d4:	80 33       	cpi	r24, 0x30	; 48
 4d6:	11 f4       	brne	.+4      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d8:	39 7e       	andi	r19, 0xE9	; 233
 4da:	09 c0       	rjmp	.+18     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4dc:	32 ff       	sbrs	r19, 2
 4de:	06 c0       	rjmp	.+12     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4e0:	b3 94       	inc	r11
 4e2:	b3 94       	inc	r11
 4e4:	04 c0       	rjmp	.+8      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4e6:	83 2f       	mov	r24, r19
 4e8:	86 78       	andi	r24, 0x86	; 134
 4ea:	09 f0       	breq	.+2      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ec:	b3 94       	inc	r11
 4ee:	33 fd       	sbrc	r19, 3
 4f0:	13 c0       	rjmp	.+38     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4f2:	30 ff       	sbrs	r19, 0
 4f4:	06 c0       	rjmp	.+12     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4f6:	5a 2c       	mov	r5, r10
 4f8:	b3 14       	cp	r11, r3
 4fa:	18 f4       	brcc	.+6      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4fc:	53 0c       	add	r5, r3
 4fe:	5b 18       	sub	r5, r11
 500:	b3 2c       	mov	r11, r3
 502:	b3 14       	cp	r11, r3
 504:	68 f4       	brcc	.+26     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 506:	b7 01       	movw	r22, r14
 508:	80 e2       	ldi	r24, 0x20	; 32
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	3c 87       	std	Y+12, r19	; 0x0c
 50e:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 512:	b3 94       	inc	r11
 514:	3c 85       	ldd	r19, Y+12	; 0x0c
 516:	f5 cf       	rjmp	.-22     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 518:	b3 14       	cp	r11, r3
 51a:	10 f4       	brcc	.+4      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 51c:	3b 18       	sub	r3, r11
 51e:	01 c0       	rjmp	.+2      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 520:	31 2c       	mov	r3, r1
 522:	34 ff       	sbrs	r19, 4
 524:	12 c0       	rjmp	.+36     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 526:	b7 01       	movw	r22, r14
 528:	80 e3       	ldi	r24, 0x30	; 48
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	3c 87       	std	Y+12, r19	; 0x0c
 52e:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 532:	3c 85       	ldd	r19, Y+12	; 0x0c
 534:	32 ff       	sbrs	r19, 2
 536:	17 c0       	rjmp	.+46     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 538:	31 fd       	sbrc	r19, 1
 53a:	03 c0       	rjmp	.+6      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 53c:	88 e7       	ldi	r24, 0x78	; 120
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	02 c0       	rjmp	.+4      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 542:	88 e5       	ldi	r24, 0x58	; 88
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	b7 01       	movw	r22, r14
 548:	0c c0       	rjmp	.+24     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 54a:	83 2f       	mov	r24, r19
 54c:	86 78       	andi	r24, 0x86	; 134
 54e:	59 f0       	breq	.+22     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 550:	31 ff       	sbrs	r19, 1
 552:	02 c0       	rjmp	.+4      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 554:	8b e2       	ldi	r24, 0x2B	; 43
 556:	01 c0       	rjmp	.+2      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 558:	80 e2       	ldi	r24, 0x20	; 32
 55a:	37 fd       	sbrc	r19, 7
 55c:	8d e2       	ldi	r24, 0x2D	; 45
 55e:	b7 01       	movw	r22, r14
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 566:	a5 14       	cp	r10, r5
 568:	38 f4       	brcc	.+14     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 56a:	b7 01       	movw	r22, r14
 56c:	80 e3       	ldi	r24, 0x30	; 48
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 574:	5a 94       	dec	r5
 576:	f7 cf       	rjmp	.-18     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 578:	aa 94       	dec	r10
 57a:	f4 01       	movw	r30, r8
 57c:	ea 0d       	add	r30, r10
 57e:	f1 1d       	adc	r31, r1
 580:	80 81       	ld	r24, Z
 582:	b7 01       	movw	r22, r14
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 58a:	a1 10       	cpse	r10, r1
 58c:	f5 cf       	rjmp	.-22     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 58e:	33 20       	and	r3, r3
 590:	09 f4       	brne	.+2      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 592:	51 ce       	rjmp	.-862    	; 0x236 <vfprintf+0x24>
 594:	b7 01       	movw	r22, r14
 596:	80 e2       	ldi	r24, 0x20	; 32
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <fputc>
 59e:	3a 94       	dec	r3
 5a0:	f6 cf       	rjmp	.-20     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 5a2:	f7 01       	movw	r30, r14
 5a4:	86 81       	ldd	r24, Z+6	; 0x06
 5a6:	97 81       	ldd	r25, Z+7	; 0x07
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5aa:	8f ef       	ldi	r24, 0xFF	; 255
 5ac:	9f ef       	ldi	r25, 0xFF	; 255
 5ae:	2c 96       	adiw	r28, 0x0c	; 12
 5b0:	e2 e1       	ldi	r30, 0x12	; 18
 5b2:	0c 94 a3 03 	jmp	0x746	; 0x746 <__epilogue_restores__>

000005b6 <strnlen_P>:
 5b6:	fc 01       	movw	r30, r24
 5b8:	05 90       	lpm	r0, Z+
 5ba:	61 50       	subi	r22, 0x01	; 1
 5bc:	70 40       	sbci	r23, 0x00	; 0
 5be:	01 10       	cpse	r0, r1
 5c0:	d8 f7       	brcc	.-10     	; 0x5b8 <strnlen_P+0x2>
 5c2:	80 95       	com	r24
 5c4:	90 95       	com	r25
 5c6:	8e 0f       	add	r24, r30
 5c8:	9f 1f       	adc	r25, r31
 5ca:	08 95       	ret

000005cc <strnlen>:
 5cc:	fc 01       	movw	r30, r24
 5ce:	61 50       	subi	r22, 0x01	; 1
 5d0:	70 40       	sbci	r23, 0x00	; 0
 5d2:	01 90       	ld	r0, Z+
 5d4:	01 10       	cpse	r0, r1
 5d6:	d8 f7       	brcc	.-10     	; 0x5ce <strnlen+0x2>
 5d8:	80 95       	com	r24
 5da:	90 95       	com	r25
 5dc:	8e 0f       	add	r24, r30
 5de:	9f 1f       	adc	r25, r31
 5e0:	08 95       	ret

000005e2 <fputc>:
 5e2:	0f 93       	push	r16
 5e4:	1f 93       	push	r17
 5e6:	cf 93       	push	r28
 5e8:	df 93       	push	r29
 5ea:	fb 01       	movw	r30, r22
 5ec:	23 81       	ldd	r18, Z+3	; 0x03
 5ee:	21 fd       	sbrc	r18, 1
 5f0:	03 c0       	rjmp	.+6      	; 0x5f8 <fputc+0x16>
 5f2:	8f ef       	ldi	r24, 0xFF	; 255
 5f4:	9f ef       	ldi	r25, 0xFF	; 255
 5f6:	28 c0       	rjmp	.+80     	; 0x648 <fputc+0x66>
 5f8:	22 ff       	sbrs	r18, 2
 5fa:	16 c0       	rjmp	.+44     	; 0x628 <fputc+0x46>
 5fc:	46 81       	ldd	r20, Z+6	; 0x06
 5fe:	57 81       	ldd	r21, Z+7	; 0x07
 600:	24 81       	ldd	r18, Z+4	; 0x04
 602:	35 81       	ldd	r19, Z+5	; 0x05
 604:	42 17       	cp	r20, r18
 606:	53 07       	cpc	r21, r19
 608:	44 f4       	brge	.+16     	; 0x61a <fputc+0x38>
 60a:	a0 81       	ld	r26, Z
 60c:	b1 81       	ldd	r27, Z+1	; 0x01
 60e:	9d 01       	movw	r18, r26
 610:	2f 5f       	subi	r18, 0xFF	; 255
 612:	3f 4f       	sbci	r19, 0xFF	; 255
 614:	31 83       	std	Z+1, r19	; 0x01
 616:	20 83       	st	Z, r18
 618:	8c 93       	st	X, r24
 61a:	26 81       	ldd	r18, Z+6	; 0x06
 61c:	37 81       	ldd	r19, Z+7	; 0x07
 61e:	2f 5f       	subi	r18, 0xFF	; 255
 620:	3f 4f       	sbci	r19, 0xFF	; 255
 622:	37 83       	std	Z+7, r19	; 0x07
 624:	26 83       	std	Z+6, r18	; 0x06
 626:	10 c0       	rjmp	.+32     	; 0x648 <fputc+0x66>
 628:	eb 01       	movw	r28, r22
 62a:	09 2f       	mov	r16, r25
 62c:	18 2f       	mov	r17, r24
 62e:	00 84       	ldd	r0, Z+8	; 0x08
 630:	f1 85       	ldd	r31, Z+9	; 0x09
 632:	e0 2d       	mov	r30, r0
 634:	09 95       	icall
 636:	89 2b       	or	r24, r25
 638:	e1 f6       	brne	.-72     	; 0x5f2 <fputc+0x10>
 63a:	8e 81       	ldd	r24, Y+6	; 0x06
 63c:	9f 81       	ldd	r25, Y+7	; 0x07
 63e:	01 96       	adiw	r24, 0x01	; 1
 640:	9f 83       	std	Y+7, r25	; 0x07
 642:	8e 83       	std	Y+6, r24	; 0x06
 644:	81 2f       	mov	r24, r17
 646:	90 2f       	mov	r25, r16
 648:	df 91       	pop	r29
 64a:	cf 91       	pop	r28
 64c:	1f 91       	pop	r17
 64e:	0f 91       	pop	r16
 650:	08 95       	ret

00000652 <__ultoa_invert>:
 652:	fa 01       	movw	r30, r20
 654:	aa 27       	eor	r26, r26
 656:	28 30       	cpi	r18, 0x08	; 8
 658:	51 f1       	breq	.+84     	; 0x6ae <__ultoa_invert+0x5c>
 65a:	20 31       	cpi	r18, 0x10	; 16
 65c:	81 f1       	breq	.+96     	; 0x6be <__ultoa_invert+0x6c>
 65e:	e8 94       	clt
 660:	6f 93       	push	r22
 662:	6e 7f       	andi	r22, 0xFE	; 254
 664:	6e 5f       	subi	r22, 0xFE	; 254
 666:	7f 4f       	sbci	r23, 0xFF	; 255
 668:	8f 4f       	sbci	r24, 0xFF	; 255
 66a:	9f 4f       	sbci	r25, 0xFF	; 255
 66c:	af 4f       	sbci	r26, 0xFF	; 255
 66e:	b1 e0       	ldi	r27, 0x01	; 1
 670:	3e d0       	rcall	.+124    	; 0x6ee <__ultoa_invert+0x9c>
 672:	b4 e0       	ldi	r27, 0x04	; 4
 674:	3c d0       	rcall	.+120    	; 0x6ee <__ultoa_invert+0x9c>
 676:	67 0f       	add	r22, r23
 678:	78 1f       	adc	r23, r24
 67a:	89 1f       	adc	r24, r25
 67c:	9a 1f       	adc	r25, r26
 67e:	a1 1d       	adc	r26, r1
 680:	68 0f       	add	r22, r24
 682:	79 1f       	adc	r23, r25
 684:	8a 1f       	adc	r24, r26
 686:	91 1d       	adc	r25, r1
 688:	a1 1d       	adc	r26, r1
 68a:	6a 0f       	add	r22, r26
 68c:	71 1d       	adc	r23, r1
 68e:	81 1d       	adc	r24, r1
 690:	91 1d       	adc	r25, r1
 692:	a1 1d       	adc	r26, r1
 694:	20 d0       	rcall	.+64     	; 0x6d6 <__ultoa_invert+0x84>
 696:	09 f4       	brne	.+2      	; 0x69a <__ultoa_invert+0x48>
 698:	68 94       	set
 69a:	3f 91       	pop	r19
 69c:	2a e0       	ldi	r18, 0x0A	; 10
 69e:	26 9f       	mul	r18, r22
 6a0:	11 24       	eor	r1, r1
 6a2:	30 19       	sub	r19, r0
 6a4:	30 5d       	subi	r19, 0xD0	; 208
 6a6:	31 93       	st	Z+, r19
 6a8:	de f6       	brtc	.-74     	; 0x660 <__ultoa_invert+0xe>
 6aa:	cf 01       	movw	r24, r30
 6ac:	08 95       	ret
 6ae:	46 2f       	mov	r20, r22
 6b0:	47 70       	andi	r20, 0x07	; 7
 6b2:	40 5d       	subi	r20, 0xD0	; 208
 6b4:	41 93       	st	Z+, r20
 6b6:	b3 e0       	ldi	r27, 0x03	; 3
 6b8:	0f d0       	rcall	.+30     	; 0x6d8 <__ultoa_invert+0x86>
 6ba:	c9 f7       	brne	.-14     	; 0x6ae <__ultoa_invert+0x5c>
 6bc:	f6 cf       	rjmp	.-20     	; 0x6aa <__ultoa_invert+0x58>
 6be:	46 2f       	mov	r20, r22
 6c0:	4f 70       	andi	r20, 0x0F	; 15
 6c2:	40 5d       	subi	r20, 0xD0	; 208
 6c4:	4a 33       	cpi	r20, 0x3A	; 58
 6c6:	18 f0       	brcs	.+6      	; 0x6ce <__ultoa_invert+0x7c>
 6c8:	49 5d       	subi	r20, 0xD9	; 217
 6ca:	31 fd       	sbrc	r19, 1
 6cc:	40 52       	subi	r20, 0x20	; 32
 6ce:	41 93       	st	Z+, r20
 6d0:	02 d0       	rcall	.+4      	; 0x6d6 <__ultoa_invert+0x84>
 6d2:	a9 f7       	brne	.-22     	; 0x6be <__ultoa_invert+0x6c>
 6d4:	ea cf       	rjmp	.-44     	; 0x6aa <__ultoa_invert+0x58>
 6d6:	b4 e0       	ldi	r27, 0x04	; 4
 6d8:	a6 95       	lsr	r26
 6da:	97 95       	ror	r25
 6dc:	87 95       	ror	r24
 6de:	77 95       	ror	r23
 6e0:	67 95       	ror	r22
 6e2:	ba 95       	dec	r27
 6e4:	c9 f7       	brne	.-14     	; 0x6d8 <__ultoa_invert+0x86>
 6e6:	00 97       	sbiw	r24, 0x00	; 0
 6e8:	61 05       	cpc	r22, r1
 6ea:	71 05       	cpc	r23, r1
 6ec:	08 95       	ret
 6ee:	9b 01       	movw	r18, r22
 6f0:	ac 01       	movw	r20, r24
 6f2:	0a 2e       	mov	r0, r26
 6f4:	06 94       	lsr	r0
 6f6:	57 95       	ror	r21
 6f8:	47 95       	ror	r20
 6fa:	37 95       	ror	r19
 6fc:	27 95       	ror	r18
 6fe:	ba 95       	dec	r27
 700:	c9 f7       	brne	.-14     	; 0x6f4 <__ultoa_invert+0xa2>
 702:	62 0f       	add	r22, r18
 704:	73 1f       	adc	r23, r19
 706:	84 1f       	adc	r24, r20
 708:	95 1f       	adc	r25, r21
 70a:	a0 1d       	adc	r26, r0
 70c:	08 95       	ret

0000070e <__prologue_saves__>:
 70e:	2f 92       	push	r2
 710:	3f 92       	push	r3
 712:	4f 92       	push	r4
 714:	5f 92       	push	r5
 716:	6f 92       	push	r6
 718:	7f 92       	push	r7
 71a:	8f 92       	push	r8
 71c:	9f 92       	push	r9
 71e:	af 92       	push	r10
 720:	bf 92       	push	r11
 722:	cf 92       	push	r12
 724:	df 92       	push	r13
 726:	ef 92       	push	r14
 728:	ff 92       	push	r15
 72a:	0f 93       	push	r16
 72c:	1f 93       	push	r17
 72e:	cf 93       	push	r28
 730:	df 93       	push	r29
 732:	cd b7       	in	r28, 0x3d	; 61
 734:	de b7       	in	r29, 0x3e	; 62
 736:	ca 1b       	sub	r28, r26
 738:	db 0b       	sbc	r29, r27
 73a:	0f b6       	in	r0, 0x3f	; 63
 73c:	f8 94       	cli
 73e:	de bf       	out	0x3e, r29	; 62
 740:	0f be       	out	0x3f, r0	; 63
 742:	cd bf       	out	0x3d, r28	; 61
 744:	09 94       	ijmp

00000746 <__epilogue_restores__>:
 746:	2a 88       	ldd	r2, Y+18	; 0x12
 748:	39 88       	ldd	r3, Y+17	; 0x11
 74a:	48 88       	ldd	r4, Y+16	; 0x10
 74c:	5f 84       	ldd	r5, Y+15	; 0x0f
 74e:	6e 84       	ldd	r6, Y+14	; 0x0e
 750:	7d 84       	ldd	r7, Y+13	; 0x0d
 752:	8c 84       	ldd	r8, Y+12	; 0x0c
 754:	9b 84       	ldd	r9, Y+11	; 0x0b
 756:	aa 84       	ldd	r10, Y+10	; 0x0a
 758:	b9 84       	ldd	r11, Y+9	; 0x09
 75a:	c8 84       	ldd	r12, Y+8	; 0x08
 75c:	df 80       	ldd	r13, Y+7	; 0x07
 75e:	ee 80       	ldd	r14, Y+6	; 0x06
 760:	fd 80       	ldd	r15, Y+5	; 0x05
 762:	0c 81       	ldd	r16, Y+4	; 0x04
 764:	1b 81       	ldd	r17, Y+3	; 0x03
 766:	aa 81       	ldd	r26, Y+2	; 0x02
 768:	b9 81       	ldd	r27, Y+1	; 0x01
 76a:	ce 0f       	add	r28, r30
 76c:	d1 1d       	adc	r29, r1
 76e:	0f b6       	in	r0, 0x3f	; 63
 770:	f8 94       	cli
 772:	de bf       	out	0x3e, r29	; 62
 774:	0f be       	out	0x3f, r0	; 63
 776:	cd bf       	out	0x3d, r28	; 61
 778:	ed 01       	movw	r28, r26
 77a:	08 95       	ret

0000077c <_exit>:
 77c:	f8 94       	cli

0000077e <__stop_program>:
 77e:	ff cf       	rjmp	.-2      	; 0x77e <__stop_program>
